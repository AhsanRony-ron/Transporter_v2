const unsigned char idleIcon[] PROGMEM = {
	0xff, 0xff, 0xff, 0x77, 0xfe, 0xc7, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0x6f, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x97, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xef, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xd7, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xef, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb7, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xef, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x77, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xee, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf7, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xec, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x77, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xeb, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0x27, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xcf, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xcf, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0x9f, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfb, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x3f, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfd, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0x7f, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0x7f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xbf, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xef, 0xff, 0x9f, 0xff, 0xff, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0x9f, 0x7f, 0xff, 0x7f, 0xfe, 0xff, 0xef, 0xff, 0xbf, 0xff, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xdf, 0x3f, 0xff, 0x7f, 0xff, 0xff, 0xcf, 0xff, 0x7f, 0xff, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0x9f, 0xff, 0x7f, 0xff, 0xff, 0xcf, 0xff, 0x7f, 0xfe, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xdf, 0xff, 0x7f, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfc, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xcf, 0xff, 0x7f, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfc, 0xef, 0xdf, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xef, 0xff, 0x3f, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfc, 0xcf, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xe7, 0xbf, 0x3f, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xf9, 0x9f, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xf7, 0x9f, 0x3f, 0xff, 0xff, 0x1f, 0xf8, 0xff, 0xf9, 0x9f, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xf7, 0x9f, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xff, 0xf1, 0x3f, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xf3, 0x8f, 0x01, 0xfe, 0xff, 0x8f, 0xff, 0xb8, 0xf3, 0x3f, 0xfe, 0xfe, 0xff, 
	0xff, 0xff, 0xfe, 0xf3, 0x0f, 0x1e, 0xff, 0xff, 0x8f, 0xff, 0xb7, 0xf3, 0x7f, 0xfe, 0xfe, 0xff, 
	0xff, 0x7f, 0xff, 0xfb, 0xc7, 0x1f, 0xff, 0xff, 0x0f, 0xff, 0xbf, 0xe3, 0x7f, 0xfc, 0xfe, 0xff, 
	0xff, 0x7f, 0xff, 0xfb, 0xe3, 0x1f, 0xff, 0xff, 0x4f, 0xff, 0x3f, 0xe7, 0x7f, 0xfc, 0xfe, 0xff, 
	0xff, 0x7f, 0xfb, 0xfb, 0xe4, 0x1f, 0xfe, 0xff, 0x4f, 0xff, 0x3f, 0xe7, 0x7f, 0xf8, 0xfd, 0xff, 
	0xff, 0x7f, 0xf9, 0xfb, 0xc7, 0x9f, 0xfe, 0xff, 0x4f, 0xff, 0x3f, 0xe7, 0xff, 0xf0, 0xfd, 0xff, 
	0xff, 0x7f, 0xf9, 0xf9, 0xc7, 0x9f, 0xb0, 0x0d, 0x4e, 0x94, 0x33, 0xe7, 0xff, 0xe5, 0xfd, 0xff, 
	0xff, 0x7f, 0xf9, 0xf9, 0xb7, 0x8d, 0x00, 0x00, 0x40, 0x00, 0x00, 0xc2, 0xff, 0xed, 0xfb, 0xff, 
	0xff, 0x7f, 0xf9, 0xf9, 0x07, 0x80, 0xf1, 0xff, 0xff, 0xff, 0x0f, 0xc0, 0xff, 0x19, 0xf7, 0xff, 
	0xff, 0x7f, 0xf9, 0xf1, 0x01, 0xfe, 0xff, 0xff, 0xff, 0x00, 0xf0, 0xc7, 0xff, 0xd9, 0xf6, 0xff, 
	0xff, 0x7f, 0xf9, 0x03, 0xfc, 0x0f, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0xc0, 0xff, 0xbb, 0xf5, 0xff, 
	0xff, 0xff, 0xf8, 0x03, 0x0f, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0xc0, 0xff, 0xbb, 0xc3, 0xff, 
	0xff, 0xff, 0xf4, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0xc0, 0xff, 0xf3, 0xb3, 0xff, 
	0xff, 0xff, 0x01, 0x20, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xc3, 0xff, 0xe3, 0xb7, 0xff, 
	0xff, 0xff, 0x9b, 0x3e, 0x00, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0x00, 0xdf, 0xff, 0x23, 0xbf, 0xff, 
	0xff, 0xff, 0xdf, 0x3f, 0x1f, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0x00, 0xdf, 0xff, 0x13, 0x3f, 0xff, 
	0xff, 0xff, 0xdf, 0xbf, 0x1f, 0x00, 0xf8, 0xff, 0x7f, 0xc0, 0x01, 0xdf, 0xff, 0x57, 0x33, 0xff, 
	0xff, 0xff, 0xdf, 0xbf, 0x1f, 0x1c, 0xf8, 0xff, 0x7f, 0xc0, 0x03, 0xdf, 0xff, 0x77, 0x30, 0xff, 
	0xff, 0xff, 0xdf, 0xbf, 0x1f, 0x3e, 0xf8, 0xff, 0x7f, 0xe0, 0x07, 0xef, 0xff, 0xf7, 0x84, 0xff, 
	0xff, 0xff, 0xcf, 0xbf, 0x1f, 0x3e, 0xfc, 0xff, 0x7f, 0xe0, 0x03, 0xef, 0xff, 0xf7, 0xc7, 0xff, 
	0xff, 0xff, 0xef, 0xbf, 0x1f, 0x3f, 0xfc, 0xff, 0x7f, 0xe0, 0x03, 0xef, 0xff, 0xf7, 0xdf, 0xff, 
	0xff, 0xff, 0xef, 0xbf, 0x1f, 0xbf, 0xfd, 0xff, 0x7f, 0xee, 0x03, 0xef, 0xff, 0xf7, 0xdf, 0xff, 
	0xff, 0xff, 0xef, 0x3f, 0xdf, 0xfe, 0xfd, 0xff, 0x7f, 0xfe, 0x3b, 0xe7, 0xff, 0xf7, 0xdf, 0xff, 
	0xff, 0xff, 0xef, 0x7f, 0xdf, 0xdd, 0xfd, 0xff, 0xff, 0xde, 0x7d, 0xf7, 0xff, 0xf3, 0x9f, 0xff, 
	0xff, 0xff, 0xef, 0x77, 0x9f, 0xf3, 0xfd, 0xff, 0xff, 0x3e, 0x7f, 0xf7, 0xfe, 0xf3, 0xbf, 0xff, 
	0xff, 0xff, 0xe7, 0x67, 0xbf, 0xff, 0xfe, 0xff, 0xff, 0xfd, 0xbf, 0x77, 0xff, 0xf3, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0x67, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xfb, 0xdf, 0x7b, 0xff, 0xfb, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0xef, 0x7e, 0x80, 0xff, 0xff, 0xff, 0x07, 0xe0, 0x9d, 0xff, 0xfb, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0xcf, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcd, 0xff, 0xf9, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0x1f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc6, 0xf7, 0xf9, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0x3f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xe2, 0xfb, 0xf8, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0xbf, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xe0, 0xfd, 0xfc, 0xbf, 0xff, 
	0xff, 0xff, 0xf7, 0xbf, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xf6, 0x7c, 0xfe, 0xbf, 0xff, 
	0xff, 0xff, 0xe1, 0x9f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x1f, 0x37, 0x7e, 0xfe, 0xbf, 0xff, 
	0xff, 0x7f, 0x0c, 0x9f, 0xff, 0xff, 0x7f, 0xe7, 0xff, 0xff, 0xdf, 0x01, 0x60, 0xfe, 0xbf, 0xff, 
	0xff, 0x9f, 0x7f, 0xbc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xfe, 0xbf, 0xff, 
	0xff, 0xe7, 0xff, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0x1f, 0xfe, 0xbf, 0xff, 
	0xff, 0xdb, 0xf3, 0x33, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0x7f, 0xfe, 0xbf, 0xff, 
	0xff, 0xfd, 0xbf, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa7, 0x7f, 0xff, 0xfc, 0xbf, 0xff, 
	0xff, 0xfe, 0xff, 0xce, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xfb, 0xf9, 0xbf, 0xff };

void drawMotorBar(int x, int y, int value, int maxVal, const char* label) {

  int barWidth = map(abs(value), 0, maxVal, 0, 40);
  u8g2.setFont(u8g2_font_new3x9pixelfont_tr);
  u8g2.drawStr(x, y, label);

  u8g2.drawFrame(x + 15, y - 6, 42, 8);

  if (value > 0) {
    u8g2.drawBox(x + 16, y - 5, barWidth, 6);
  } else if (value < 0) {
    u8g2.drawBox(x + 56 - barWidth, y - 5, barWidth, 6);
  }

  u8g2.setCursor(x + 60, y);
  u8g2.print(value);
}

void mainDisplay() {
  u8g2.clearBuffer();
  u8g2.setDrawColor(1);

  u8g2.setFont(u8g2_font_new3x9pixelfont_tr);

  drawMotorBar(50, 20, motorFrontLeft , 255, "FL");
  drawMotorBar(50, 32, motorFrontRight, 255, "FR");
  drawMotorBar(50, 44, motorRearLeft  , 255, "RL");
  drawMotorBar(50, 56, motorRearRight , 255, "RR");

  u8g2.setFont(u8g2_font_new3x9pixelfont_tr);
  u8g2.drawStr(0, 12, Ps3.isConnected() ? "Connect" : "Disconnect");
  u8g2.drawStr(0, 24, capiton ? "Grp" : "Ungrip");
  u8g2.setCursor(0, 36);
  u8g2.print(map(G1, 145, 0, 0, 90));
  u8g2.drawStr(0, 48, STBYStatus ? "STBY on" : "STBY off");

  float v = getBatteryVoltage();
  char buf[10];
  snprintf(buf, sizeof(buf), "%.2fV", v);
  u8g2.drawStr(0, 60, buf);

  u8g2.sendBuffer();
}

void idleDisplay() {
  u8g2.clearBuffer();
  u8g2.setDrawColor(1);

  u8g2.drawXBM(0, 0, 128, 64, idleIcon);
  u8g2.sendBuffer();
} 

void nameDisplay() {
  u8g2.clearBuffer();
  u8g2.setDrawColor(1);
  u8g2.setFont(u8g2_font_logisoso18_tr);
  u8g2.drawStr(0, 48, "Narukami");

  u8g2.sendBuffer();
}

void AccelSetting() {
  if (UpArrow) {
    if (valpos == 1) {accelPerMs += 1;}
    if (valpos == 2) {accelPerMs += 0.1;}
    if (valpos == 3) {accelPerMs += 0.01;}
    delay(200);
  }
    if (DownArrow) {
    if (valpos == 1) {accelPerMs -= 1;}
    if (valpos == 2) {accelPerMs -= 0.1;}
    if (valpos == 3) {accelPerMs -= 0.01;}
    delay(200);
  }

  if (RightArrow && valpos < 3) {valpos +=1; delay(200);}
  if (LeftArrow && valpos > 1) {valpos -=1; delay(200);}

  u8g2.clearBuffer();
  u8g2.setDrawColor(1);
  u8g2.setFont(u8g2_font_logisoso18_tr);
  u8g2.setCursor(0, 32);
  u8g2.print(accelPerMs);
  u8g2.setCursor(0, 64);
  u8g2.print(valpos);

  u8g2.sendBuffer();
}